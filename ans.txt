a = 1
b = 2
c = 3
n = 5

em_list = []
for x in [a, b, c]:
    for y in [a, b, c]:
        for z in [a, b, c]:
            if [x, y, z] not in em_list and x + y + z != n:
                em_list.append([x, y, z])

# print(em_list)

# for i in range(0,3):
#     print(i)


print ([[a,b,c] for a in range(0,x+1) for b in range(0,y+1) for c in range(0,z+1) if a + b + c != n ])

_____________________________________________________________________
 Que:1

 """You can use this class to represent how classy someone
or something is.
"Classy" is interchangable with "fancy".
If you add fancy-looking items, you will increase
your "classiness".
Create a function in "Classy" that takes a string as
input and adds it to the "items" list.
Another method should calculate the "classiness"
value based on the items.
The following items have classiness points associated
with them:
"tophat" = 2
"bowtie" = 4
"monocle" = 5
Everything else has 0 points.
Use the test cases below to guide you!"""
# Test cases
me = Classy()

# Should be 0
print me.getClassiness()

me.addItem("tophat")
# Should be 2
print me.getClassiness()

me.addItem("bowtie")
me.addItem("jacket")
me.addItem("monocle")
# Should be 11
print me.getClassiness()

me.addItem("bowtie")
# Should be 15
print me.getClassiness()


ans:

class Classy(object):
    def __init__(self):
        self.items = []
        self.class_objects = {
            "tophat" : 2,
            "bowtie" : 4,
            "monocle": 5,
        }

    def addItem(self,class_item):
        if class_item in self.class_objects:
            self.items.append(class_item)





    def getClassiness(self):
        # print(self.items)
        # print(list(self.class_objects.keys()))
        c = 0
        for cls in self.items:

            for i in self.class_objects:
                if i in cls:
                    c +=self.class_objects[i]

        return c
